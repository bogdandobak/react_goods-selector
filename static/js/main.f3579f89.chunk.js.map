{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","selectedGoods","showSelectedGood","event","target","classList","toggle","setState","textContent","handleSelectedGood","good","previousSibling","arrayOfGoods","includes","length","prevState","filter","item","concat","handleClearSelected","this","type","onClick","map","goodFromServer","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"+NAKMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WAoFaC,E,4MAhFbC,MAAQ,CACNC,cAAe,I,EAGjBC,iBAAmB,SAACC,GAAW,IACrBC,EAAWD,EAAXC,OAERA,EAAOC,UAAUC,OAAO,YAExB,EAAKC,SAAS,CACZN,cAAe,CAACG,EAAOI,gB,EAI3BC,mBAAqB,SAACN,GACpB,IAAMO,EAAOP,EAAMC,OAAOO,gBAEpBC,EAAe,EAAKZ,MAAMC,cAE5BW,EAAaC,SAASH,EAAKF,cAAgBI,EAAaE,OAAS,GACnE,EAAKP,UAAS,SAAAQ,GAAS,MAAK,CAC1Bd,cAAec,EAAUd,cAAce,QAAO,SAAAC,GAAI,OAChDA,IAASP,EAAKF,mBAKfI,EAAaC,SAASH,EAAKF,cAC9B,EAAKD,UAAS,SAAAQ,GAAS,MAAK,CAC1Bd,cAAec,EAAUd,cAAciB,OAAOR,EAAKF,kB,EAKzDW,oBAAsB,WACpB,EAAKZ,SAAS,CACZN,cAAe,M,4CAInB,WAAU,IAAD,OACCA,EAAkBmB,KAAKpB,MAAvBC,cAER,OACE,oCACE,4BACIA,EAAca,OAAf,UAEMb,EAFN,cACG,qBAILA,EAAca,OAAS,GACxB,4BAAQO,KAAK,SAASC,QAASF,KAAKD,qBAApC,KAIA,4BACGrB,EAAgByB,KAAI,SAAAC,GAAc,OACjC,oCACE,wBACEC,IAAKD,EACLF,QAAS,EAAKpB,kBAEbsB,GAEH,4BACEH,KAAK,SACLI,IAAKD,EACLF,QAAS,EAAKb,oBAEbR,EAAcY,SAASW,GAAkB,SAAW,iB,GAvEnDE,IAAMC,WCdxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.f3579f89.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React from 'react';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    selectedGoods: [],\n  }\n\n  showSelectedGood = (event) => {\n    const { target } = event;\n\n    target.classList.toggle('selected');\n\n    this.setState({\n      selectedGoods: [target.textContent],\n    });\n  }\n\n  handleSelectedGood = (event) => {\n    const good = event.target.previousSibling;\n\n    const arrayOfGoods = this.state.selectedGoods;\n\n    if (arrayOfGoods.includes(good.textContent) && arrayOfGoods.length > 0) {\n      this.setState(prevState => ({\n        selectedGoods: prevState.selectedGoods.filter(item => (\n          item !== good.textContent\n        )),\n      }));\n    }\n\n    if (!arrayOfGoods.includes(good.textContent)) {\n      this.setState(prevState => ({\n        selectedGoods: prevState.selectedGoods.concat(good.textContent),\n      }));\n    }\n  }\n\n  handleClearSelected = () => {\n    this.setState({\n      selectedGoods: [],\n    });\n  }\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <>\n        <h1>\n          {!selectedGoods.length\n            ? 'No goods selected'\n            : `${selectedGoods} in basket`\n          }\n        </h1>\n        {selectedGoods.length > 0 && (\n        <button type=\"button\" onClick={this.handleClearSelected}>\n          X\n        </button>\n        )}\n        <ul>\n          {goodsFromServer.map(goodFromServer => (\n            <>\n              <li\n                key={goodFromServer}\n                onClick={this.showSelectedGood}\n              >\n                {goodFromServer}\n              </li>\n              <button\n                type=\"submit\"\n                key={goodFromServer}\n                onClick={this.handleSelectedGood}\n              >\n                {selectedGoods.includes(goodFromServer) ? 'Remove' : 'Add'}\n              </button>\n            </>\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}